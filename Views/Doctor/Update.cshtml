@model SensenbrennerHospital.Models.ViewModels.CreateDoctor

@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>


@using (Html.BeginForm("Update", "Doctor", new { id = Model.Doctor.DoctorID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Doctor</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Doctor.DoctorID, new { Name = "DoctorID" } )

    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doctor.FirstName, new { htmlAttributes = new { @class = "form-control", Name = "FirstName" } })
            @Html.ValidationMessageFor(model => model.Doctor.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doctor.LastName, new { htmlAttributes = new { @class = "form-control", Name = "LastName" } })
            @Html.ValidationMessageFor(model => model.Doctor.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Doctor.PracticeID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="PracticeID">
                @foreach (var item in Model.Practice)
                {
                    <option value="@item.PracticeID">@item.PracticeName</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
