@model SensenbrennerHospital.Models.ViewModels.UpdateVolunteer

@{
    ViewBag.Title = "Update Volunteer";
}
@{
    ViewBag.Title = "View";
}
<div class="viewContainer">
    <h2 class="viewTitle">Update Volunteer</h2>

    @using (Html.BeginForm("Edit", "Volunteer", new { id = Model.volunteer.VolunteerID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="customForm">
            <h4 class="formTitle">Update Volunteer</h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.volunteer.VolunteerID, new { Name = "VolunteerID" })
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.volunteer.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.volunteer.FirstName, new { htmlAttributes = new { @class = "form-control", Name = "FirstName" } })
                            @Html.ValidationMessageFor(model => model.volunteer.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.volunteer.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select name="DepartmentID">
                                @foreach (var department in Model.alldepartments)
                                {
                                    //Auto-selects the department the volunteer is currently assigned to
                                    string selected = "";
                                    if (Model.volunteer.DepartmentID == department.DepartmentID)
                                    {
                                        selected = "";
                                    }
                                    <option value="@department.DepartmentID" @selected>@department.DepartmentName</option>
                                }
                            </select>

                            @{
                                //Razor equivalent
                                /*
                                @Html.DropDownListFor(
                                    model => model.volunteer.DepartmentID,
                                    new SelectList(Model.alldepartments, "DepartmentID", "DepartmentName", Model.volunteer.DepartmentID),
                                    new { Name = "DepartmentID" }
                                )
                                */
                            }

                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-12">Picture:</div>
                        <div class="col-md-12"><input type="file" name="VolunteerPic" /></div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "List")
    </div>
</div>